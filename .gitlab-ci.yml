stages:
    - test
    - build
    - deploy

services:
    db:
        image: postgres:14.2-bullseye

variables:
    DATABASE_URL: postgres://music:music12345@http://srv-captain--reviewifydb/postgres

# Run flake8 to check for code quality
lint-test-job:
    image: python:3.10-alpine
    stage: test
    script:
        - pip install black
        - black api
        - pip install flake8
        - flake8 --extend-ignore E501,E712 api

# Run the unit tests
api-unit-test-job:
    image: python:3.10-alpine
    stage: test
    needs:
        - lint-test-job
    script:
        - cd api
        - pip install -r requirements.txt
        - python -m pytest

build-api-backend:
    image: docker:19.03.1
    stage: build
    # variables:
    #     CORS_HOST: https://dalgriff.gitlab.io
    services:
        - docker:19.03.1-dind
    before_script:
        - export DOCKER_REGISTRY_USER=$CI_REGISTRY_USER # built-in GitLab Registry User
        - export DOCKER_REGISTRY_PASSWORD=$CI_REGISTRY_PASSWORD # built-in GitLab Registry Password
        - export DOCKER_REGISTRY_URL=$CI_REGISTRY # built-in GitLab Registry URL
        - export COMMIT_HASH=$CI_COMMIT_SHA # Your current commit sha
        - export IMAGE_NAME_WITH_REGISTRY_PREFIX=$CI_REGISTRY_IMAGE # Your repository prefixed with GitLab Registry URL
        - docker login -u "$DOCKER_REGISTRY_USER" -p "$DOCKER_REGISTRY_PASSWORD" $DOCKER_REGISTRY_URL # Instructs GitLab to login to its registry

    script:
        - cd api
        - echo "Building..." # MAKE SURE NO SPACE ON EITHER SIDE OF = IN THE FOLLOWING LINE
        - export CONTAINER_FULL_IMAGE_NAME_WITH_TAG=$IMAGE_NAME_WITH_REGISTRY_PREFIX/fastapi:$COMMIT_HASH
        - docker build -f ./Dockerfile --pull -t fastapi_img .
        - docker tag fastapi_img "$CONTAINER_FULL_IMAGE_NAME_WITH_TAG"
        - docker push "$CONTAINER_FULL_IMAGE_NAME_WITH_TAG"
        - echo $CONTAINER_FULL_IMAGE_NAME_WITH_TAG
        - echo "Deploying on CapRover..."
        - docker run caprover/cli-caprover:v2.1.1 caprover deploy --caproverUrl $CAPROVER_URL --caproverPassword $CAPROVER_PASSWORD --caproverApp $CAPROVER_APP --imageName $CONTAINER_FULL_IMAGE_NAME_WITH_TAG
    only:
        - main

# Build the React/JavaScript front-end
build-front-end-job:
    stage: build
    image: node:lts-bullseye
    needs:
        - lint-test-job
    variables:
        # If either of these variables is defined in the GitLab
        # CI/CD variables, that value will override the value here.
        # You need to substitute in your real values for
        # GROUP_NAME, PROJECT_NAME, & WEBSERVICE_NAME below.
        PUBLIC_URL: https://team-drop-and-give-me-20.gitlab.io/module3-project-gamma/
        REACT_APP_SAMPLE_SERVICE_API_HOST: https://captain.sept-ct-2.mod3projects.com/
    script:
        - cd ghi
        - npm install
        - npm run build
        - cp build/index.html build/404.html
    artifacts:
        paths:
            - ghi/build/

# Deploy the React/JavaScript front-end to GitLab pages
pages:
    stage: deploy
    rules:
        - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    dependencies:
        - build-front-end-job
    needs:
        - build-front-end-job
    script:
        - mv ghi/build/ public
    artifacts:
        paths:
            - public
